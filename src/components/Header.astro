---
import MenuIcon from "@/icons/MenuIcon.astro";
import { jwtVerify } from "jose";
---

<nav class="bg-footer border-primary shadow-md shadow-primary">
  <div
    class="max-w-screen-xl flex flex-wrap items-center justify-between mx-auto p-4"
  >
    <a
      href="https://f1-bets-cobetes.vercel.app/"
      class="flex items-center space-x-3 rtl:space-x-reverse"
    >
      <img src="/favicon.svg" class="h-8" alt="Logotipo de F1 Bets" />
      <span
        class="self-center text-2xl text-primary font-wide whitespace-nowrap"
        >F1 Bets</span
      >
    </a>
    <button
      id="menu-button"
      data-collapse-toggle="navbar-default"
      type="button"
      class="inline-flex items-center p-2 w-10 h-10 justify-center text-sm text-primary rounded-lg md:hidden hover:bg-secondary focus:outline-none focus:ring-2 focus:text-primary"
      aria-controls="navbar-default"
      aria-expanded="false"
    >
      <span class="sr-only">Abrir menú principal</span>
      <MenuIcon />
    </button>
    <div class="hidden w-full md:block md:w-auto" id="navbar-default">
      <ul
        id="navbar-links"
        class="font-regular flex flex-col p-4 md:p-0 mt-4 border border-gray-100 rounded-lg bg-footer md:flex-row md:space-x-8 rtl:space-x-reverse md:mt-0 md:border-0 md:bg-footer"
      >
        <li>
          <a
            href="/carreras"
            class="block py-2 px-3 text-primary rounded hover:bg-accent hover:text-primary md:hover:bg-transparent md:border-0 md:text-primary md:hover:text-accent md:p-0"
            aria-current="page"
          >
            Carreras
          </a>
        </li>
        <li>
          <a
            href="/apuestas"
            class="block py-2 px-3 text-primary rounded hover:bg-accent hover:text-primary md:hover:bg-transparent md:border-0 md:text-primary md:hover:text-accent md:p-0"
          >
            Apuestas
          </a>
        </li>
        <li>
          <a
            href="/clasificacion"
            class="block py-2 px-3 text-primary rounded hover:bg-accent hover:text-primary md:hover:bg-transparent md:border-0 md:text-primary md:hover:text-accent md:p-0"
          >
            Clasificación
          </a>
        </li>
        <li id="navbar-link-admin">
          <a
            href="/administrador"
            class="block py-2 px-3 text-primary rounded hover:bg-accent hover:text-primary md:hover:bg-transparent md:border-0 md:text-primary md:hover:text-accent md:p-0"
          >
            Administrador
          </a>
        </li>
        <li>
          <a
            href="/perfil"
            class="block py-2 px-3 text-primary rounded hover:bg-accent hover:text-primary md:hover:bg-transparent md:border-0 md:text-primary md:hover:text-accent md:p-0"
          >
            Perfil
          </a>
        </li>
      </ul>
    </div>
  </div>
</nav>

<script>
  document.addEventListener("DOMContentLoaded", async function () {
    const button = document.getElementById("menu-button");
    const menu = document.getElementById("navbar-default");

    button?.addEventListener("click", function () {
      menu?.classList.toggle("hidden");
    });

    showNavLinks();
  });

  function showNavLinks() {
    const links = document.getElementById("navbar-links");
    const token = sessionStorage.getItem("token");
    const admin = document.getElementById("navbar-link-admin");

    if (token && isValidJWT(token)) {
      links?.classList.remove("hidden");
    } else {
      links?.classList.add("hidden");
    }

    if (isUserAdmin()) {
      admin?.classList.remove("hidden");
    } else {
      admin?.classList.add("hidden");
    }
  }

  function isValidJWT(token: string) {
    const parts = token.split(".");
    if (parts.length !== 3) {
      return false;
    }

    for (let part of parts) {
      if (!isBase64Url(part)) {
        return false;
      }
    }

    try {
      const header = JSON.parse(
        atob(parts[0].replace(/-/g, "+").replace(/_/g, "/"))
      );
      const payload = JSON.parse(
        atob(parts[1].replace(/-/g, "+").replace(/_/g, "/"))
      );

      if (typeof header !== "object" || typeof payload !== "object") {
        return false;
      }
    } catch (err) {
      return false;
    }

    return true;
  }

  function isBase64Url(str: string) {
    const base64UrlPattern = /^[A-Za-z0-9_-]+$/;
    return base64UrlPattern.test(str);
  }

  function isUserAdmin() {
    const token = sessionStorage.getItem("token");
    if (!token) {
      return false;
    }

    const parts = token.split(".");
    const payload = JSON.parse(
      atob(parts[1].replace(/-/g, "+").replace(/_/g, "/"))
    );
    return payload.isAdmin;
  }
</script>
